name: CI Pipeline

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKERFILE_DIR: src

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Increment Version
      id: increment_version
      run: |
        versionFile=version.txt
        version=v1.0.0
        if [ -f "$versionFile" ]; then
          version=$(cat $versionFile)
          IFS='.' read -r -a versionParts <<< "${version//v/}"
          major=${versionParts[0]}
          minor=${versionParts[1]}
          patch=${versionParts[2]}
          patch=$((patch + 1))
          if [ "$patch" -eq 100 ]; then
            patch=0
            minor=$((minor + 1))
          fi
          version="v${major}.${minor}.${patch}"
        fi
        echo $version > $versionFile
        echo "::set-output name=version::$version"

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t chukwuka1488/polygon-rpc-app:${{ steps.increment_version.outputs.version }} $DOCKERFILE_DIR

    - name: Push Docker Image
      run: |
        docker push chukwuka1488/polygon-rpc-app:${{ steps.increment_version.outputs.version }}

    - name: Update Kubernetes Manifests
      run: |
        ./changeTag.sh ${{ steps.increment_version.outputs.version }}

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Configure Kubernetes Access
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/config
        export KUBECONFIG=$HOME/.kube/config
        kubectl config view
      env:
        KUBECONFIG: $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubernetes-manifest/deployment.yaml --validate=false
      env:
        KUBECONFIG: $HOME/.kube/config
